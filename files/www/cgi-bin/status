#!/usr/bin/lua
--[[

  Part of AREDN -- Used for creating Amateur Radio Emergency Data Networks
  Copyright (C) 2018 Darryl Quinn
  See Contributors file for additional contributors

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation version 3 of the License.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.

  Additional Terms:

  Additional use restrictions exist on the AREDN(TM) trademark and logo.
    See AREDNLicense.txt for more info.

  Attributions to the AREDN Project must be retained in the source code.
  If importing this code into a new or existing project attribution
  to the AREDN project must be added to the source code.

  You must not misrepresent the origin of the material contained within.

  Modified versions must be modified to attribute to the original source
  and be marked in reasonable ways as differentiate it from the original
  version

--]]

require("uci")
require("aredn.uci")
require("aredn.utils")
require("aredn.http")
require("nixio")
require("ubus")
local ipc = require("luci.ip")

-- Function extensions
os.capture = capture

-- ==== MAIN =====
-- TODO: handle theme changes via FORM POST of CSS info
-- local css="aredn"
-- nixio.fs.unlink("/tmp/web/style.css")
-- nixio.fs.symlink("/www/"..css..".css","/tmp/web/style.css")
-- css=nil


ctx = uci.cursor()
if not ctx then
    error("Failed to get uci cursor")
end

info={}

-- Gather UCI info
myuci=getUciConfType("system", "system")
info['node']=myuci[0]['hostname']
info['ip']={}
info['ip']['wifi']=getUciConfSectionOption("network","wifi","ipaddr")
info['ip']['lan']=getUciConfSectionOption("network","lan","ipaddr")
myuci=nil

-- Gateway
rt = luci.ip.route("8.8.8.8")
if rt ~= nil then
  info['ip']['gw']=rt.gw
else
  info['ip']['gw']=""
end

-- WAN
local cubus = ubus.connect()
niws=cubus:call("network.interface.wan","status",{})
info['ip']['wan']=niws['ipv4-address'][1]['address']
niws=nil
cbus=nil

-- Mesh Version
-- Firmware version
local relfile=io.open("/etc/mesh-release","r")
local fv=""
if relfile~=nil then
  fv=relfile:read()
  relfile:close()
end
relfile=nil
info['firmware_version']=fv:chomp()

-- Gather System info
mynix=nixio.sysinfo()
info['sysinfo']={}
upsecs=mynix['uptime']
info['sysinfo']['uptime']=secondsToClock(upsecs)
info['sysinfo']['loads']=mynix['loads']
for n,x in ipairs(info['sysinfo']['loads']) do
  info['sysinfo']['loads'][n]=round2(x,2)
end
info['sysinfo']['freeram']=mynix['freeram']/1024
info['sysinfo']['sharedram']=mynix['sharedram']/1024
info['sysinfo']['bufferram']=mynix['bufferram']/1024

mynix=nixio.fs.statvfs("/")
info['sysinfo']['rootfree']=mynix['bfree']*4
mynix=nixio.fs.statvfs("/tmp")
info['sysinfo']['tmpfree']=mynix['bfree']*4
mynix=nil


-- Output the HTTP header
http_header()

print("<html>")
print([[
<head>
<title>AREDN&trade; Node ]])
print(info['node'])
print([[</title>
<meta http-equiv='expires' content='0'>
<meta http-equiv='cache-control' content='no-cache'>
<meta http-equiv='pragma' content='no-cache'>
<meta name='robots' content='noindex'><link id='stylesheet_css' rel=StyleSheet href='/style.css?]] .. upsecs .. [[' type='text/css'>
</head>
<body><form method='post' action='/cgi-bin/status' enctype='multipart/form-data'>
<center>
<div class="TopBanner"><div class="LogoDiv"><a href="http://localnode.local.mesh:8080" title="Go to localnode"><img src="/AREDN.png" class="AREDNLogo"></img></a></div></div><h1><big>]])
print(info['node'])
print([[</big></h1><hr>
<nobr>
<a href='/help.html' target='_blank'>Help</a>
&nbsp;&nbsp;&nbsp;<input type=submit name=refresh value=Refresh title='Refresh this page'>
&nbsp;&nbsp;&nbsp;<button type=button onClick='window.location="mesh"' title='See what is on the mesh'>Mesh Status</button>
&nbsp;&nbsp;&nbsp;<button type=button onClick='window.location="scan"' title='See what wireless networks are nearby'>WiFi Scan</button>
&nbsp;&nbsp;&nbsp;<button type=button onClick='window.location="setup"' title='Configure this node'>Setup</button>]])
-- &nbsp;&nbsp;&nbsp;<select name="css" size="1" onChange="form.submit()" ><option>Select a theme</option><option value="aredn.css">aredn</option><option value="black_on_white.css">black_on_white</option><option value="loading.css">loading</option><option value="red_on_black.css">red_on_black</option><option value="white_on_black.css">white_on_black</option><option value="yellow_on_black.css">yellow_on_black</option></select></nobr>
print([[
<input type=hidden name=reload value=reload>
<br><br><table>
<tr><td valign=top><table cellpadding=4>
<tr><th align=right><nobr>WiFi address</nobr></th><td>]])
print(info['ip']['wifi'])
print([[</td></tr>
<tr><th align=right><nobr>LAN address</nobr></th><td>]])
print(info['ip']['lan'])
print([[</td></tr>
<tr><th align=right><nobr>WAN address</nobr></th><td>]])
print(info['ip']['wan'])
print([[</td></tr>
<tr><th align=right><nobr>Default Gateway</nobr></th><td>]])
print(info['ip']['gw'])
print([[</td></tr>
</table></td><td valign=top><table cellpadding=4>
<tr><th align=right valign=middle><nobr>Signal/Noise/Ratio</nobr></th><td valign=middle><nobr><button type=button onClick='window.location="signal?realtime=1"' title='Display continuous or archived signal strength on a chart'>Charts</button>
</nobr></td></tr>
<tr><th align=right><nobr>Firmware Version</nobr></th><td><nobr>]])
print(info['firmware_version'])
print([[</tr><tr><th align=right>System Time</th><td>]])
print(os.date("%a %b %d, %Y<br>%H:%M:%S %Z"))
print([[</td></tr>
<tr><th align=right>Uptime<br>Load Average</th><td>]])
print(info['sysinfo']['uptime'])
print("<br>")
print(info['sysinfo']['loads'][1] .. " ," .. info['sysinfo']['loads'][2] .. " ," .. info['sysinfo']['loads'][3])
print([[</td></tr>
<tr><th align=right>Free Space</th><td><nobr>flash = ]])
print(info['sysinfo']['rootfree'])
print([[ KB</nobr><br><nobr>/tmp = ]])
print(info['sysinfo']['tmpfree'])
print([[ KB</nobr><br><nobr>memory = ]])
print(info['sysinfo']['freeram'])
print([[ KB</nobr><br><nobr>shared ram =]])
print(info['sysinfo']['sharedram'])
print([[ KB</nobr><br><nobr>buffer ram =]])
print(info['sysinfo']['bufferram'])
print([[ KB</nobr></td></tr></table></td></tr></table>
</center>
</form>
<div class="Page_Footer"><hr><p class="PartOfAREDN">Part of the AREDN&trade; Project. For more details please <a href="/about.html" target="_blank">see here</a></p></div></body>
]])
print("</html>")